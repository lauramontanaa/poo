class Vehiculo():

    def __init__(self, modelo, marca, anio, precio, tipo_vehiculo):
        self.__modelo = modelo;
        self.__marca = marca;
        self.__anio = anio;
        self.__precio = precio;
        self.__tipo_vehiculo = tipo_vehiculo;

    def obtenerInformacion(self):
        return "Informacion vehiculo:\nMarca:" 
        + self.__marca + "\nModelo:" 
        + self.__modelo + "\nPrecio:" 
        + str(self.__precio);

    def obtenerPrecio(self):
        return self.__precio;

class ComparacionVehiculo:

    listadoVehiculos = [];#lista de tipo estÃ¡tico (Global a la clase)

    @staticmethod
    def definirListadoVehiculos(listadoVehiculos):
        ComparacionVehiculo.listadoVehiculos = listadoVehiculos;

    @staticmethod
    def obtenerVehiculoMasCostoso():
        
        valorVehiculoMasCosto = 0;
        vehiculoMasCostoso = Vehiculo("","","","",0,"");

        for vehiculo in ComparacionVehiculo.listadoVehiculos:
            if vehiculo.obtenerPrecio() > valorVehiculoMasCosto:
                valorVehiculoMasCosto = vehiculo.obtenerPrecio(); 
                vehiculoMasCostoso = vehiculo;

        return vehiculoMasCostoso.obtenerInformacion();    

    @staticmethod    
    def obtenerVehiculoMenorCostoso():
        pass

    def obtenerCantidadVehiculosPorTipo(tipoVehiculo):
        pass;


#Vehiculos
#self, modelo, marca, anio, precio, tipo_vehiculo
renault_oroch_zen = Vehiculo("Oroch Zen 4x4", "Renault","2023", 108000000, "vans");
